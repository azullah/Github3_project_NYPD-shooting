head(us_deaths)
us_deaths <- us_deaths %>% pivot_longer(cols = -(UID:Combined_Key),
names_to = "date",
values_to = "deaths") %>%
select(Admin2:deaths) %>% mutate(date=mdy(date)) %>%
select(-c(Lat,Long_))
summary(us_deaths)
us_deaths <- us_deaths %>% pivot_longer(cols = -(UID:population),
names_to = "date",
values_to = "deaths") %>%
select(Admin2:deaths) %>% mutate(date=mdy(date)) %>%
select(-c(Lat,Long_))
us_deaths <- us_deaths %>% pivot_longer(cols = -(UID:Population),
names_to = "date",
values_to = "deaths") %>%
select(Admin2:deaths) %>% mutate(date=mdy(date)) %>%
select(-c(Lat,Long_))
head(us_deaths)
US <- us_cases %>% full_join(us_deaths)
head(us)
head(US)
global <- global %>% unite("Combined_Key",
c(Province_State, Country_Region),
sep = ",",
na.rm = TRUE,
remove = FALSE)
head(global)
global <- global %>% unite("Combined_Key",
c(Province_State, Country_Region),
sep = ", ",
na.rm = TRUE,
remove = FALSE)
tail(global)
url_in2 <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/"
fips_file <- "UID_ISO_FIPS_LookUp_Table.csv"
url2 <- str_c(url_in2, fips_file)
url2
FIPS <- read_csv(url2[1])
head(FIPS)
global -> global %>%
)
global -> global %>% left_join(uid, by = c("Province_State","Country_Region")) %>% select(-c(uid,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global
global -> global %>% left_join(UID, by = c("Province_State","Country_Region")) %>% select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global -> global %>% left_join(UID, by = c("Province_State","Country_Region")) %>% select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global -> global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>% select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global
global -> global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
head(FIPS)
url_in2 <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/"
fips_file <- "UID_ISO_FIPS_LookUp_Table.csv"
url2 <- str_c(url_in2, fips_file)
FIPS <- read_csv(url2[1])
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global <- global %>% unite("Combined_Key",
c(Province_State, Country_Region),
sep = ", ",
na.rm = TRUE,
remove = FALSE)
url_in2 <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/"
fips_file <- "UID_ISO_FIPS_LookUp_Table.csv"
url2 <- str_c(url_in2, fips_file)
FIPS <- read_csv(url2[1])
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global
url_in2 <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/"
fips_file <- "UID_ISO_FIPS_LookUp_Table.csv"
url2 <- str_c(url_in2, fips_file)
FIPS <- read_csv(url2[1])
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
head(global)
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
head(FIPS)
global <- global %>% unite("Combined_Key",
c(Province_State, Country_Region),
sep = ", ",
na.rm = TRUE,
remove = FALSE)
head(global)
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region"))
global %>% select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global %>% select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key.y)
library(tidyverse)
url_in <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/"
file_names <- c("time_series_covid19_confirmed_US.csv",
"time_series_covid19_deaths_US.csv",
"time_series_covid19_confirmed_global.csv",
"time_series_covid19_deaths_global.csv"
)
urls <- str_c(url_in, file_names)
us_cases <- read_csv(urls[1])
us_deaths <- read_csv(urls[2])
global_cases <- read_csv(urls[3])
global_deaths <- read_csv(urls[4])
library(lubridate)
global_cases <- global_cases %>%
pivot_longer(cols = -c("Province/State",
"Country/Region",
"Lat","Long"),                                            names_to = "date",
values_to = "cases") %>%
select(-c(Lat, Long))
global_deaths <- global_deaths %>%
pivot_longer(cols = -c("Province/State",
"Country/Region",
"Lat","Long"),                                            names_to = "date",
values_to = "deaths") %>%
select(-c(Lat, Long))
global <- global_cases %>%
full_join(global_deaths) %>%
rename(Country_Region = `Country/Region`,
Province_State = `Province/State`) %>%
mutate(date = mdy(date))
global <- global %>% filter(cases > 0)
us_cases <- us_cases %>% pivot_longer(cols = -(UID:Combined_Key),
names_to = "date",
values_to = "cases") %>%
select(Admin2:cases) %>% mutate(date=mdy(date)) %>%
select(-c(Lat,Long_))
us_deaths <- us_deaths %>% pivot_longer(cols = -(UID:Population),
names_to = "date",
values_to = "deaths") %>%
select(Admin2:deaths) %>% mutate(date=mdy(date)) %>%
select(-c(Lat,Long_))
US <- us_cases %>% full_join(us_deaths)
global <- global %>% unite("Combined_Key",
c(Province_State, Country_Region),
sep = ", ",
na.rm = TRUE,
remove = FALSE)
url_in2 <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/"
fips_file <- "UID_ISO_FIPS_LookUp_Table.csv"
url2 <- str_c(url_in2, fips_file)
FIPS <- read_csv(url2[1])
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key.y)
global
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%           rename(Combined_Key.y = Combined_Key) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%           rename(Combined_Key = Combined_Key.y) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global
global <- global %>% unite('Combined_Key',
c(Province_State, Country_Region),
sep = ", ",
na.rm = TRUE,
remove = FALSE)
url_in2 <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/"
fips_file <- "UID_ISO_FIPS_LookUp_Table.csv"
url2 <- str_c(url_in2, fips_file)
FIPS <- read_csv(url2[1])
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%           rename(Combined_Key = 'Combined_Key.y') %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%           rename(Combined_Key = Combined_Key.y) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%           rename(Combined_Key = Combined_Key.y) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key.y)
global <- global %>% unite('Combined_Key',
c(Province_State, Country_Region),
sep = ", ",
na.rm = TRUE,
remove = FALSE)
url_in2 <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/"
fips_file <- "UID_ISO_FIPS_LookUp_Table.csv"
url2 <- str_c(url_in2, fips_file)
FIPS <- read_csv(url2[1])
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key.y)
global
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key)
global <- global %>% left_join(FIPS, by = c("Province_State","Country_Region")) %>%
select(-c(UID,FIPS)) %>% select(Province_State, Country_Region, date, cases, deaths, Population, Combined_Key.y)
US_by_state <- US %>%
group_by(Province_State, Country_Region, date) %>%
summarise(cases = sum(cases), deaths = sum(deaths), Population = sum(Population)) %>%
mutate(deaths_per_mill = deaths * 1000000 / Population) %>%
select(Province_State, Country_Region, date, cases, deaths, deaths_per_mill, Population) %>% ungroup
View(US_by_state)
View(US_by_state)
US_totals <- US_by_state %>%
group_by(Country_Region, date) %>%
summarise(cases = sum(cases), deaths = sum(deaths),
Population = sum(Population)) %>%
mutate(deaths_per_mill = deaths * 1000000 / Population) %>%
select(Country_Region, date, cases, deaths, deaths_per_mill, Population) %>% ungroup
US_totals
tail(US_totals)
max(US_totals$date)
max(US_totals$deaths)
US_by_state <- US_by_state %>%
mutate(new_cases = cases - lag(cases),
new_deaths = deaths - lag(deaths))
tail(US_totals)
tail(US_totals) %>% select(new_cases, new_deaths, everything())
US_by_state <- US_by_state %>%
mutate(new_cases = cases - lag(cases),
new_deaths = deaths - lag(deaths))
US_totals <- US_totals %%
mutate(new_cases = cases - lag(cases),
new_deaths = deaths - lag(deaths))
tail(US_totals) %>% select(new_cases, new_deaths, everything())
US_totals <- US_totals %%
mutate(new_cases = (cases - lag(cases)) ,
new_deaths = deaths - lag(deaths))
tail(US_totals) %>% select(new_cases, new_deaths, everything())
colnames(US_totals)
US_by_state <- US_by_state %>%
mutate(new_cases = cases - lag(cases),
new_deaths = deaths - lag(deaths))
US_totals <- US_totals %%
mutate(new_cases = cases - lag(cases) ,
new_deaths = deaths - lag(deaths))
tail(US_totals) %>% select(new_cases, new_deaths, everything())
colnames(US_by_state)
US_by_state <- US_by_state %>%
mutate(new_cases = cases - lag(cases),
new_deaths = deaths - lag(deaths))
US_totals <- US_totals %%
mutate((new_cases = cases - lag(cases)) ,
new_deaths = deaths - lag(deaths))
tail(US_totals) %>% select(new_cases, new_deaths, everything())
colnames(US_by_state)
US_by_state <- US_by_state %>%
mutate((new_cases = cases - lag(cases)),
new_deaths = deaths - lag(deaths))
US_totals <- US_totals %%
mutate((new_cases = cases - lag(cases)) ,
new_deaths = deaths - lag(deaths))
tail(US_totals) %>% select(new_cases, new_deaths, everything())
colnames(US_totals)
US_by_state
US_by_state <- US_by_state %>%
mutate((new_cases = cases - lag(cases)),
(new_deaths = deaths - lag(deaths)))
US_totals <- US_totals %%
mutate((new_cases = cases - lag(cases)) ,
(new_deaths = deaths - lag(deaths)))
tail(US_totals) %>% select(new_cases, new_deaths, everything())
US_by_state <- US_by_state %>%
mutate(new_cases = (cases - lag(cases)),
new_deaths = (deaths - lag(deaths)))
US_totals <- US_totals %%
mutate(new_cases = (cases - lag(cases)) ,
new_deaths = (deaths - lag(deaths)))
US_totals
US_totals <- US_totals %%
mutate(new_cases = (cases - lag(cases)) ,
new_deaths = (deaths - lag(deaths)))
US_totals
US_by_state <- US_by_state %>%
mutate(new_cases = cases - lag(cases)) %>%
mutate(new_deaths = deaths - lag(deaths))
US_by_state
US_totals <- US_totals %%
mutate(new_cases = cases - lag(cases)) %>%
mutate(new_deaths = deaths - lag(deaths))
US_totals
US_totals <- US_totals %%
mutate(new_cases = cases - lag(cases)) %>%
mutate(new_deaths = deaths - lag(deaths))
US_totals
US_totals <- US_totals %%
mutate(new_cases = cases - lag(cases)) %>%
mutate(new_deaths = deaths - lag(deaths))
US_totals
colnames(US_totals)
US_totals <- US_totals %%
mutate(new_cases = (cases - lag(cases))) %>%
mutate(new_deaths = (deaths - lag(deaths)))
US_totals
US_by_state <- US_by_state %>%
mutate(new_cases = cases - lag(cases)) %>%
mutate(new_deaths = deaths - lag(deaths))
US_by_state
US_totals <- US_totals %%
mutate(new_cases = cases - lag(cases)) %>%
mutate(new_deaths = deaths - lag(deaths))
US_totals
US_totals <- US_totals %%
mutate(new_cases = cases - lag(cases)) %>%
mutate(new_deaths = deaths - lag(deaths))
US_totals <-
mutate(US_totals, (new_cases = cases - lag(cases)),
new_deaths = deaths - lag(deaths))
US_totals
US_totals <-
mutate(US_totals, (new_cases = cases - lag(cases)),
new_deaths = deaths - lag(deaths))
US_totals
US_totals <-
mutate(US_totals, new_cases = cases - lag(cases),
new_deaths = deaths - lag(deaths))
US_totals
tail(US_totals) %>% select(new_cases, new_deaths, everything())
state
state <- "New York"
US_totals %>%
ggplot(aes(x = date, y = new_cases)) +
geom_line(aes(color = "new_cases")) +
geom_point(aes(color = "new_cases")) +
geom_line(aes(y = new_deaths, color = "new_deaths")) +
geom_point(aes(y = new_deaths, color = "new_deaths")) +
scale_y_log10() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
labs(title = str_c("COVID-19 in ", state), y = NULL)
US_totals %>%
ggplot(aes(x = date, y = new_cases)) +
geom_line(aes(color = "new_cases")) +
geom_point(aes(color = "new_cases")) +
geom_line(aes(y = new_deaths, color = "new_deaths")) +
geom_point(aes(y = new_deaths, color = "new_deaths")) +
scale_y_log10() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
labs(title = str_c("COVID-19 in US"), y = NULL)
state <- "New York"
US_by_state %>% filter(Province_State==state) %>%
ggplot(aes(x = date, y = new_cases)) +
geom_line(aes(color = "new_cases")) +
geom_point(aes(color = "new_cases")) +
geom_line(aes(y = new_deaths, color = "new_deaths")) +
geom_point(aes(y = new_deaths, color = "new_deaths")) +
scale_y_log10() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
labs(title = str_c("COVID-19 in ", state), y = NULL)
state <- "New York"
US_by_state %>% filter(Province_State==state) %>%
ggplot(aes(x = date, y = new_cases),na.rm=TRUE) +
geom_line(aes(color = "new_cases")) +
geom_point(aes(color = "new_cases")) +
geom_line(aes(y = new_deaths, color = "new_deaths")) +
geom_point(aes(y = new_deaths, color = "new_deaths")) +
scale_y_log10() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
labs(title = str_c("COVID-19 in ", state), y = NULL)
state <- "New York"
US_by_state <- US_by_state[ !(is.na(US_by_state$cases | is.na(US_by_state$deaths)),]
US_by_state %>% filter(Province_State==state) %>%
ggplot(aes(x = date, y = new_cases),na.rm=TRUE) +
geom_line(aes(color = "new_cases")) +
geom_point(aes(color = "new_cases")) +
geom_line(aes(y = new_deaths, color = "new_deaths")) +
geom_point(aes(y = new_deaths, color = "new_deaths")) +
scale_y_log10() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
labs(title = str_c("COVID-19 in ", state), y = NULL)
US_by_state <- US_by_state[!(is.na(US_by_state$cases | is.na(US_by_state$deaths))]
US_by_state <- US_by_state[ !((is.na(US_by_state$cases) | is.na(US_by_state$deaths))]
US_by_state <- US_by_state[ !((is.na(US_by_state$cases) | is.na(US_by_state$deaths)) ]
US_by_state %>% drop_na() %>% filter(Province_State==state) %>%
ggplot(aes(x = date, y = new_cases),na.rm=TRUE) +
geom_line(aes(color = "new_cases")) +
geom_point(aes(color = "new_cases")) +
geom_line(aes(y = new_deaths, color = "new_deaths")) +
geom_point(aes(y = new_deaths, color = "new_deaths")) +
scale_y_log10() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
labs(title = str_c("COVID-19 in ", state), y = NULL)
US_state_totals <- US_by_state %>%
group_by(Province_State) %>%
summarize(deaths = max(deaths), cases = max(cases),
population = max(Population),
cases_per_thou = 1000 * cases / population,
deaths_per_thou = 1000 * deaths / population) %>%
filter(cases > 0, population > 0)
US_state_totals %>% drop_na() %>% filter(Province_State==state) %>%
ggplot(aes(x = date, y = cases_per_thou),na.rm=TRUE) +
geom_line(aes(color = "cases_per_thou")) +
geom_point(aes(color = "cases_per_thou")) +
geom_line(aes(y = deaths_per_thou, color = "deaths_per_thou")) +
geom_point(aes(y = deaths_per_thou, color = "deaths_per_thou")) +
scale_y_log10() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
labs(title = str_c("COVID-19 in ", state), y = NULL)
US_state_totals
US_state_totals %>% drop_na() %>% filter(Province_State==state) %>%
ggplot(aes(x = Province_State, y = cases_per_thou),na.rm=TRUE) +
geom_line(aes(color = "cases_per_thou")) +
geom_point(aes(color = "cases_per_thou")) +
geom_line(aes(y = deaths_per_thou, color = "deaths_per_thou")) +
geom_point(aes(y = deaths_per_thou, color = "deaths_per_thou")) +
scale_y_log10() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
labs(title = str_c("COVID-19 in ", state), y = NULL)
US_state_totals %>% slice_min(deaths_per_thou, n = 10)
US_state_totals %>% slice_max(deaths_per_thou, n = 10)
View(US_totals)
mod = lm(deaths_per_thou ~ cases_per_thou, data = US_state_totals)
summary(mod)
US_state_totals %>% slice_min(cases_per_thou)
library(tidyverse)
US_state_totals %>% slice_min(cases_per_thou)
US_state_totals %>% slice_max(cases_per_thou)
x_grid <- seq(100, 376)
new_df <- tibble(cases_per_thou = x_grid)
new_df
US_totals_with_pred <- US_state_totals %>% mutate(pred = predict(mod))
US_totals_with_pred
US_totals_with_pred %>% ggplot() +
geom_point(aes(x = cases_per_thou, y = deaths_per_thou), color = "blue", na.rm=TRUE) +
geom_point(aes(x = cases_per_thou, y = pred), color = "red", na.rm=TRUE)
install.packages("plotly")
US_totals_with_pred %>% ggplot() +
geom_point(aes(x = cases_per_thou, y = deaths_per_thou), color = "blue", na.rm=TRUE) +
geom_point(aes(x = cases_per_thou, y = pred), color = "red", na.rm=TRUE) %>% ggplotly
library(plotly)
US_totals_with_pred %>% ggplot() +
geom_point(aes(x = cases_per_thou, y = deaths_per_thou), color = "blue", na.rm=TRUE) +
geom_point(aes(x = cases_per_thou, y = pred), color = "red", na.rm=TRUE) %>% ggplotly
library(plotly)
gg <- US_totals_with_pred %>% ggplot() +
geom_point(aes(x = cases_per_thou, y = deaths_per_thou), color = "blue", na.rm=TRUE) +
geom_point(aes(x = cases_per_thou, y = pred), color = "red", na.rm=TRUE)
ggplotly(gg)
gg
library(plotly)
data(canada.cities, package="maps")
p <- ggplot(canada.cities, aes(long, lat)) +
borders(regions="canada", name="borders") +
coord_equal() +
geom_point(aes(text=name, size=pop), colour="red", alpha=1/2, name="cities")
fig <- ggplotly(p)
fig
install.packages("maps")
library(plotly)
data(canada.cities, package="maps")
p <- ggplot(canada.cities, aes(long, lat)) +
borders(regions="canada", name="borders") +
coord_equal() +
geom_point(aes(text=name, size=pop), colour="red", alpha=1/2, name="cities")
fig <- ggplotly(p)
fig
gg <- US_totals_with_pred %>% ggplot() +
geom_point(aes(x = cases_per_thou, y = deaths_per_thou), color = "blue", na.rm=TRUE) +
geom_point(aes(x = cases_per_thou, y = pred), color = "red", na.rm=TRUE)
fig <- ggplotly(gg)
fig
gg <- US_totals_with_pred %>% ggplot() +
geom_point(aes(x = cases_per_thou, y = deaths_per_thou), color = "blue", na.rm=TRUE, text = paste("state:", Province_State)) +
geom_point(aes(x = cases_per_thou, y = pred), color = "red", na.rm=TRUE)
fig <- ggplotly(gg)
fig
gg <- US_totals_with_pred %>% ggplot() +
geom_point(aes(x = cases_per_thou, y = deaths_per_thou, label = paste("State", Province_State)), color = "blue", na.rm=TRUE) +
geom_point(aes(x = cases_per_thou, y = pred), color = "red", na.rm=TRUE)
fig <- ggplotly(gg)
fig
gg <- US_totals_with_pred %>% ggplot() +
geom_point(aes(x = cases_per_thou, y = deaths_per_thou, text = paste("State", Province_State)), color = "blue", na.rm=TRUE) +
geom_point(aes(x = cases_per_thou, y = pred), color = "red", na.rm=TRUE)
fig <- ggplotly(gg)
fig
gg <- US_totals_with_pred %>% ggplot() +
geom_point(aes(x = cases_per_thou, y = deaths_per_thou, text = str_c("State: ", Province_State, "<br>Population: ", population)), color = "blue", na.rm=TRUE) +
geom_point(aes(x = cases_per_thou, y = pred), color = "red", na.rm=TRUE)
fig <- ggplotly(gg)
fig
setwd("~/School/CU Boulder/Course 5301/COVID-19/time_series_covid19_confirmed_US")
setwd("~/School/CU Boulder/Course 5301/time_series_covid19_confirmed_US")
devtools::install_github("mkuhn/dict")
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
install.packages("dict")
install.packages("Dict")
library(Dict)
install.packages("hunspell")
library(hunspell)
hunspell -D
setwd("~/School/CU Boulder/Course 5301/time_series_covid19_confirmed_US")
View(canada.cities)
rm(list = ls())
install.packages("janitor")
library(janitor)
install.packages("janitor")
install.packages("janitor")
install.packages("janitor")
library(tidyverse)
library(ggfortify)
library(ggplot2)
library(lubridate)
install.packages("zoo", dependencies = TRUE)
knitr::opts_chunk$set(echo = TRUE)
data_url <-"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/"
f_names <- c("time_series_covid19_recovered_global.csv", "time_series_covid19_deaths_global.csv", "time_series_covid19_deaths_US.csv", "time_series_covid19_confirmed_global.csv",
"time_series_covid19_confirmed_US.csv")
urls <- str_c(data_url, f_names)
urls
recovered_global <- read_csv(urls[1])
deaths_global <- read_csv(urls[2])
deaths_US <- read_csv(urls[3])
confirmed_global <- read_csv(urls[4])
confirmed_US <- read_csv(urls[5])
